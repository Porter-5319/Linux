#!/bin/bash

# 位置参数
echo "\$0 : $0"
echo "\$1 : $1"
echo "\$2 : $2"

## 注意当位置参数的下标大于9时，需要使用${n}
### {}的作用是为了帮助解释器识别参数的边界，这和变量加{}是一样的效果

## 给函数传递位置参数
function func(){
	echo "Parame 0 : $0" # 依旧是脚本的名称
	echo "Parame 1 : $1" # 这里好像不会使用脚本调用是传入的参数
	echo "Parame 2 : $2"
}

func 111 222


## 其它特殊变量
### $# 传递给脚本或函数的参数的个数
echo "一共传递了 $# 个参数"

### $* 传递给脚本或函数的所有参数
echo "所有参数是：$*"

### $@ 传递给脚本或函数的所有参数
echo "所有参数是：$@"

### $* 与 $@ 的区别，注意是在使用 "" 后才会提现出来
#### $* 会把所有参数看成一个整体 ，不能使用for循环
#### $@ 会区分各个参数 可以使用for循环
for i in "$@"
do
	echo "\$@ : $i"
done

for i in "$*"
do
	echo "\$* : $i"
done

### $? 获取上一个命令的返回值和获取函数的返回值
function add(){
	return `expr $1 + $2`
}
add 23 50
echo "add 23 50 = $?"
